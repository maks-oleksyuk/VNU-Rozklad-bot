from aiogram import types
from config import searchGroup
from config import bot, faculty, chair, getGroupsByFaculty, getTeachersByChair
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

async def setKeyboard(message: types.Message, step):
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    b_back = KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    b_group = KeyboardButton(text="–°—Ç—É–¥–µ–Ω—Ç üéì")
    b_teacher = KeyboardButton(text="–í–∏–∫–ª–∞–¥–∞—á üíº")

    match step:
        case "choice":
            markup.row(b_teacher, b_group)
        case "faculty":
            markup.add(b_back)
            for b in faculty:
               markup.add(KeyboardButton(text=b))
        case "chair":
            markup.add(b_back)
            for b in chair:
               markup.add(KeyboardButton(text=b))           
        case "group":
            markup.add(b_back)
            groups = await getGroupsByFaculty(message.text)
            for i in range(0, len(groups), 2):
                if i == len(groups)-1:
                    markup.add(KeyboardButton(text=groups[i]))
                else:
                    markup.row(KeyboardButton(text=groups[i]), KeyboardButton(text=groups[i+1]))
        case "surname":
            markup.add(b_back)
            teachers = await getTeachersByChair(message.text)
            for i in teachers:
                markup.add(KeyboardButton(text=i))
        case "search":
            markup.add(b_back)
            res = await searchGroup(message.text)
            for i  in range(0, len(res), 2):
                if i == len(res)-1:
                    markup.add(KeyboardButton(text=res[i]))
                else:
                    markup.row(KeyboardButton(text=res[i]), KeyboardButton(text=res[i+1]))
        case "timetable":
            markup.row("–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–ù–¥")
            markup.row("‚¨ÖÔ∏è —Ç–∏–∂–¥–µ–Ω—å", "—Å—å–æ–≥–æ–¥–Ω—ñ", "—Ç–∏–∂–¥–µ–Ω—å ‚û°Ô∏è")
            markup.row("–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è ‚è∞", "–ù–∞ —Ç–∏–∂–¥–µ–Ω—å", "üìÜ –í–≤–µ—Å—Ç–∏ –¥–∞—Ç—É")
    return markup
