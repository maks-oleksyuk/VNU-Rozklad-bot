import datetime
import keyboard
import variables
from bs4 import BeautifulSoup


# –ü–∞—Ä—Å–∏–Ω–≥ –ø–æ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —Ç–∞ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è —Å—Ç—Ä—ñ—á–∫–∏
def parsing(req, mes, date):
    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥—É
    soup = BeautifulSoup(req.text, "html.parser")
    h4 = soup.select(".col-md-6 > h4")
    table = soup.find_all("table")
    td = soup.findAll("td")

    # n - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞—Ä –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è (–º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤—ñ–∫–Ω–∞), b - –Ω–∞—è–≤–Ω—ñ—Å—Ç—å —Ä–æ–∑–∫–ª–∞–¥—É
    b = False
    n = len(td) / len(table) / 3

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –¥–∞—Ç–∏ –≤–≤–µ–¥–µ–Ω–æ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º
    if date:
        if type(date) == datetime.date:
            d = date
        else:
            d = datetime.datetime.strptime(date, "%d.%m.%y").date()
    else:
        d = datetime.date.today()

    if variables.last_selec[mes.from_user.id] == 1:
        subtitle = soup.find_all(attrs={"id": "group"})
        who = "–≥—Ä—É–ø–∏"
        icons = "üéì"

    elif variables.last_selec[mes.from_user.id] == 2:
        subtitle = soup.find_all(attrs={"id": "teacher"})
        who = "–≤–∏–∫–ª–∞–¥–∞—á–∞"
        icons = "üíº"

    # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫—É —Ä–æ–∑–∫–ª–∞–¥—É
    str = (
        icons
        + "<b> –†–æ–∑–∫–ª–∞–¥ "
        + who
        + "<u> "
        + subtitle[0]["value"]
        + "</u>\nüîπ –Ω–∞ "
        + d.strftime("%d.%m.%Y")
        + " ("
        + variables.week[d.weekday()]
        + ")</b>\n"
    )

    # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è —Å—Ç—Ä—ñ—á–∫–∏ —Ä–æ–∑–∫–ª–∞–¥—É –¥–ª—è –ø–æ–∫–∞–∑—É
    for w in h4:
        if d.strftime("%d.%m.%Y") in w.text:
            index_start = 3 * n * h4.index(w)
            for i in range(int(index_start), int(index_start + n * 3), 3):
                if not bool(td[i + 2].text.strip()):
                    continue
                else:
                    str_numtime = (
                        "\n<i>üîÖ "
                        + td[i].text
                        + " –ü–∞—Ä–∞ ("
                        + td[i + 1].text[:5]
                        + " - "
                        + td[i + 1].text[5:]
                        + ")</i>\n"
                    )
                    for br in td[i + 2]("br"):
                        br.replace_with("\n")
                    if len(td[i + 2]("div")) == 2:
                        str_couple = (
                            td[i + 2]
                            .text.replace("\n  ", "\n")
                            .replace("\n ", "\n")
                            .replace("\n", "</u></b>\n", 5)
                            .replace("</u></b>\n", "\n", 4)
                            .replace("\n", "<b><u>\n", 4)
                            .replace("<b><u>\n", "\n", 3)
                            .replace("\n", "</u></b>\n", 1)
                        )
                    else:
                        str_couple = (
                            td[i + 2]
                            .text.replace("\n  ", "\n")
                            .replace("\n ", "\n")
                            .replace("\n", "</u></b>\n", 1)
                        )
                    str += str_numtime + "<b><u>" + str_couple

            # –º—ñ–Ω—è—î–º–æ –∑–º—ñ–Ω—É b, —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ä–æ–∑–∫–ª–∞–¥
            b = True
            variables.bot.send_message(
                mes.from_user.id,
                str,
                parse_mode="html",
                reply_markup=keyboard.set_markup(mes.from_user.id, 3),
            )

    # –Ø–∫—â–æ —Ä–æ–∑–∫–ª–∞–¥—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤–∏–≤–æ–¥–∏–º–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    if not b:
        variables.bot.send_message(
            mes.from_user.id,
            str + "<b>\n–í—ñ—Ç–∞—é,  –≤  —Ç–µ–±–µ  –≤–∏—Ö—ñ–¥–Ω–∏–π!üéâüòé</b>",
            parse_mode="html",
            reply_markup=keyboard.set_markup(mes.from_user.id, 3),
        )

    # log
    print(
        len(variables.last_selec),
        mes.from_user.id,
        mes.from_user.full_name,
        mes.from_user.username,
        d,
        mes.text,
    )
