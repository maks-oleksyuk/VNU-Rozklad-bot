from aiogram import types

from loader import dp
from ..commands import schedule
from ..commands.default import cmd_cancel
from ..utils.messages import answer
from ..utils.timetable import change_week, change_week_day


@dp.message_handler(content_types=types.ContentTypes.TEXT)
async def text(message: types.Message) -> None:
    """Handler function for processing text messages.

    Args:
        message: The message sent by the user.
    """
    match message.text:
        case '–°—Ç—É–¥–µ–Ω—Ç üéì':
            # Importing a class here and not at the beginning,
            # for the correct order of handlers in the Dispatcher.
            from ..states.student import FSMStudent
            await FSMStudent.first()
            await answer(message, 'faculty', 'faculty')
        case '–í–∏–∫–ª–∞–¥–∞—á üíº':
            # Importing a class here and not at the beginning,
            # for the correct order of handlers in the Dispatcher.
            from ..states.teacher import FSMTeacher
            await FSMTeacher.first()
            await answer(message, 'chair', 'chair')
        case '—Å—å–æ–≥–æ–¥–Ω—ñ':
            await schedule.today(message)
        case '–Ω–∞ —Ç–∏–∂–¥–µ–Ω—å':
            await schedule.week(message)
        case '–ø–Ω' | '–≤—Ç' | '—Å—Ä' | '—á—Ç' | '–ø—Ç' | '—Å–±' | '–Ω–¥' | 'üü¢':
            await change_week_day(message)
        case '‚¨ÖÔ∏è —Ç–∏–∂–¥–µ–Ω—å':
            await change_week(message, 'prev')
        case '—Ç–∏–∂–¥–µ–Ω—å ‚û°Ô∏è':
            await change_week(message, 'next')
        case '–ó–º—ñ–Ω–∏—Ç–∏ –∑–∞–ø–∏—Ç':
            await cmd_cancel(message)
        case '–í–≤–µ—Å—Ç–∏ –¥–∞—Ç—É':
            await schedule.set_date(message)
