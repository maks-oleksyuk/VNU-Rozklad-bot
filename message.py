from time import strftime
from aiogram import types
from decouple import config

from keyboard import setKeyboard


async def answer(message: types.Message, option, data=None):
    """Sending a message using the answer aiogram method

    Args:
        message (types.Message): Message with additional data
        option (str): Message identifier to send
        data (str, optional): Data to send. Defaults to None.
    """
    match option:
        case "start":
            await message.answer(
                "üëã *–ü—Ä–∏–≤—ñ—Ç\!*\n\n"
                + "*–Ø* ‚Äì ü§ñ –ø–æ–º—ñ—á–Ω–∏–∫, —É —è–∫–æ–≥–æ,\n"
                + "—Ç–∏ –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—å,\n"
                + "—è–∫—ñ –≤ —Ç–µ–±–µ –ø–∞—Ä–∏ –ø—Ä–æ—Ç—è–≥–æ–º —Ç–∏–∂–Ω—è\.\n\n"
                + "ü¶æ –û–±–µ—Ä–∏ –¥–ª—è –∫–æ–≥–æ –±—É–¥–µ–º–æ —Ñ–æ—Ä–º—É–≤–∞—Ç–∏\n"
                + "—Ä–æ–∑–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ–Ω—é –∑–Ω–∏–∑—É:\n\n"
                + "‚ùï–Ø–∫—â–æ –º–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ *‚åò*",
                parse_mode = "MarkdownV2",
                reply_markup = await setKeyboard("choice"),
            )
        case "choice":
            await message.answer(
                "ü¶æ –û–±–µ—Ä–∏ –¥–ª—è –∫–æ–≥–æ –±—É–¥–µ–º–æ —Ñ–æ—Ä–º—É–≤–∞—Ç–∏\n"
                + "—Ä–æ–∑–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ–Ω—é –∑–Ω–∏–∑—É:",
                reply_markup = await setKeyboard("choice"),
            )
        case "chair":
            await message.answer(
                "üìÅ –û–±–µ—Ä–∏ *–∫–∞—Ñ–µ–¥—Ä—É* –∑—ñ —Å–ø–∏—Å–∫—É –∞–±–æ\n"
                + "–≤–≤–µ–¥–∏ –ø—Ä—ñ–∑–≤–∏—â–µ –¥–ª—è –ø–æ—à—É–∫—É üîé",
                parse_mode = "Markdown",
                reply_markup = await setKeyboard("chair"),
            )
        case "faculty":
            await message.answer(
                "üìÅ –û–±–µ—Ä–∏ *—Ñ–∞–∫—É–ª—å—Ç–µ—Ç* –∑—ñ —Å–ø–∏—Å–∫—É –∞–±–æ\n"
                + "–≤–≤–µ–¥–∏ –Ω–∞–∑–≤—É –≥—Ä—É–ø–∏ –¥–ª—è –ø–æ—à—É–∫—É üîé",
                parse_mode = "Markdown",
                reply_markup = await setKeyboard("faculty"),
            )
        case "surname":
            await message.answer(
                "üìÇ –û–±–µ—Ä–∏ *–≤–∏–∫–ª–∞–¥–∞—á–∞* –∑—ñ —Å–ø–∏—Å–∫—É:\n",
                parse_mode = "Markdown",
                reply_markup = await setKeyboard("surname", message),
            )
        case "group":
            await message.answer(
                "üìÇ –û–±–µ—Ä–∏ *–≥—Ä—É–ø—É* –∑—ñ —Å–ø–∏—Å–∫—É:\n",
                parse_mode = "Markdown",
                reply_markup = await setKeyboard("group", message),
            )
        case "data":
            await message.answer(
                data, parse_mode="MarkdownV2",
                reply_markup = await setKeyboard("timetable", message))
        case "no-data":
            await message.answer(
                "üåÄ –ü–æ—Ç—Ä—ñ–±–Ωe –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö",
                reply_markup = await setKeyboard("choice"))
        case "set-date":
            await message.answer(
                "üìÜ *–í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É:*\n"
                + "‚òùÔ∏è –ù–∞–π–∫—Ä–∞—â–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç ‚Äì `dd.mm`\n"
                + "–∞–ª–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–∞–∫–æ–∂ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–∏—Ö\n\n"
                + "/cancel ‚Äì –¥–ª—è –≤—ñ–¥–º—ñ–Ω–∏",
                parse_mode="MarkdownV2")
        case "error-date":
            await message.answer(
                "‚ùóÔ∏è *–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç–∏* ‚ùóÔ∏è\n"
                + "üåÄ –ü–æ–≤—Ç–æ—Ä—ñ—Ç—å —Å–ø—Ä–æ–±—É —â–µ —Ä–∞–∑\n\n"
                + "‚òùÔ∏è –ù–∞–π–∫—Ä–∞—â–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç ‚Äì `dd.mm`\n\n"
                + "/cancel ‚Äì –¥–ª—è –≤—ñ–¥–º—ñ–Ω–∏",
                parse_mode="MarkdownV2")
        case "cancel-date":
            await message.answer("‚ùï –í–≤–µ–¥–µ–Ω—è –¥–∞—Ç–∏ —Å–∫–∞—Å–æ–≤–∞–Ω–æ")
        case "about":
            await message.answer(
                "–ë–æ—Ç, –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É —Ä–æ–∑–∫–ª–∞–¥—É VNU\n\n"
                + "–ë–æ—Ç –≤ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ, —Ç–æ–º—É,\n"
                + "—è–∫—â–æ –≤–∏–Ω–∏–∫–Ω—É—Ç—å —è–∫—ñ—Å—å –ø—Ä–æ–±–ª–µ–º–∏ –∞–±–æ –ø–∏—Ç–∞–Ω–Ω—è\n"
                + "–Ω–µ —Å–æ—Ä–æ–º—Å—è —ñ –ø–∏—à–∏ [—Å—é–¥–∏](tg://user?id=" + str(config("ADMIN_ID"))+ "), –≤—ñ–Ω –¥–æ–ø–æ–º–æ–∂–µ üòé\n\n"
                + "*–í–µ–ª–∏–∫–µ –¥—è–∫—É—é* [Tim Boniuk](https://t.me/timboniuk) –∑–∞ —á—É–¥–æ–≤–∏–π –∞–≤–∞—Ç–∞—Ä\n\n"
                + "[üí∏ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–µ–∫—Ç](https://send.monobank.ua/8mZyo57Cpu)",
                disable_web_page_preview=True,
                parse_mode="MarkdownV2")
        case "help":
            await message.answer(
                "‚ú≥Ô∏è __*–î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É –ø–æ—Ç—Ä—ñ–±–Ω–æ\:*__\n\n"
                + "*1\.* –û–±—Ä–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–ª—è –∫–æ–≥–æ —Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥\n"
                + "*2\.* –û–±—Ä–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–∞–Ω—ñ, –∞–±–æ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –ø–æ—à—É–∫–æ–º\n\n"
                + "‚ö†Ô∏è –Ø–∫—â–æ –ø–æ–º–∏–ª–∏–≤—Å—è –∞–±–æ –ø–µ—Ä–µ–¥—É–º–∞–≤, —ñ—Å–Ω—É—î –∫–æ–º–∞–Ω–¥–∞ /cancel\n\n"
                + "‚ùï–Ø–∫—â–æ –º–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ *‚åò*",
                parse_mode="MarkdownV2")


async def reply(message: types.Message, option):
    """Sending a message using the reply aiogram method

    Args:
        message (types.Message): Message with additional data
        option (str): Message identifier to send
    """
    match option:
        case "good-search-group":
            await message.reply(
                "üóÇ –û—Å—å —â–æ —è –∑–Ω–∞–π—à–æ–≤:",
                reply_markup = await setKeyboard("search-group", message),
            )
        case "fail-search-group":
            await message.reply(
                "–ó–∞ —Ü–∏–º –∑–∞–ø–∏—Ç–æ–º –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æüßê\n\n"
                + "‚ÅâÔ∏è –í–∫–∞–∂—ñ—Ç—å –±—ñ–ª—å—à —Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –∞–±–æ\n"
                + "üìÅ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–µ–Ω—é –∑–Ω–∏–∑—É:",
                reply_markup = await setKeyboard("faculty", message),
            )
        case "good-search-teacher":
            await message.reply(
                "üóÇ –û—Å—å —â–æ —è –∑–Ω–∞–π—à–æ–≤:",
                reply_markup = await setKeyboard("search-teacher", message),
            )
        case "fail-search-teacher":
            await message.reply(
                "–ó–∞ —Ü–∏–º –∑–∞–ø–∏—Ç–æ–º –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æüßê\n\n"
                + "‚ÅâÔ∏è –í–∫–∞–∂—ñ—Ç—å –±—ñ–ª—å—à —Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –∞–±–æ\n"
                + "üìÅ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–µ–Ω—é –∑–Ω–∏–∑—É:",
                reply_markup = await setKeyboard("chair", message),
            )
    