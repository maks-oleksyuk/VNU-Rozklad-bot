import json
from datetime import date
from os import getenv

from api.timetable_api import get_groups, get_teachers
from database.db import get_departments_by_mode

chair, faculty = [], []
week = ['–ü–æ–Ω–µ–¥—ñ–ª–æ–∫', '–í—ñ–≤—Ç–æ—Ä–æ–∫', '–°–µ—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä',
        "–ü'—è—Ç–Ω–∏—Ü—è", '–°—É–±–æ—Ç–∞', '–ù–µ–¥—ñ–ª—è'] * 2

message = {
    'start': 'üëã *–ü—Ä–∏–≤—ñ—Ç\\!*\n\n'
             + '*–Ø* ‚Äì ü§ñ –ø–æ–º—ñ—á–Ω–∏–∫, —É —è–∫–æ–≥–æ,\n'
             + '—Ç–∏ –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—à –¥—ñ–∑–Ω–∞—Ç–∏—Å—å,\n'
             + '—è–∫—ñ –≤ —Ç–µ–±–µ –ø–∞—Ä–∏ –ø—Ä–æ—Ç—è–≥–æ–º —Ç–∏–∂–Ω—è\\.\n\n'
             + 'ü¶æ –û–±–µ—Ä–∏ –¥–ª—è –∫–æ–≥–æ –±—É–¥–µ–º–æ —Ñ–æ—Ä–º—É–≤–∞—Ç–∏\n'
             + '—Ä–æ–∑–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ–Ω—é –∑–Ω–∏–∑—É:\n\n'
             + '‚ùï–Ø–∫—â–æ –º–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ, –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ *‚åò*',

    'help': '‚ú≥Ô∏è __*–î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–∑–∫–ª–∞–¥—É –ø–æ—Ç—Ä—ñ–±–Ω–æ\\:*__\n\n'
            + '*1\\.* –û–±—Ä–∞—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–ª—è –∫–æ–≥–æ —Ñ–æ—Ä–º—É–≤–∞—Ç–∏ —Ä–æ–∑–∫–ª–∞–¥\n'
            + '*2\\.* –û–±—Ä–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–∞–Ω—ñ, –∞–±–æ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—å –ø–æ—à—É–∫–æ–º\n\n'
            + '‚ö†Ô∏è –Ø–∫—â–æ –ø–æ–º–∏–ª–∏–≤—Å—è –∞–±–æ –ø–µ—Ä–µ–¥—É–º–∞–≤, —ñ—Å–Ω—É—î –∫–æ–º–∞–Ω–¥–∞ /cancel\n\n'
            + '‚ùï–Ø–∫—â–æ –º–µ–Ω—é –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ *‚åò*',

    'about': 'ü§ñ –ë–æ—Ç, –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –ø–µ—Ä–µ–≥–ª—è–¥—É —Ä–æ–∑–∫–ª–∞–¥—É VNU\n\n'
             + 'üë®üèº‚Äçüíª –ë–æ—Ç –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ, —Ç–æ–º—É,\n'
             + '—è–∫—â–æ –≤–∏–Ω–∏–∫–Ω—É—Ç—å —è–∫—ñ—Å—å –ø—Ä–æ–±–ª–µ–º–∏ –∞–±–æ –ø–∏—Ç–∞–Ω–Ω—è\n'
             + '–Ω–µ —Å–æ—Ä–æ–º—Å—è, –ø–∏—à–∏ [—Å—é–¥–∏](tg://user?id=' + str(
        getenv('ADMIN_ID')) + '), –≤—ñ–Ω –¥–æ–ø–æ–º–æ–∂–µ üòé\n\n'
             + '*üé® –í–µ–ª–∏–∫–µ –¥—è–∫—É—é* [Tim Boniuk](https://t.me/timboniuk) –∑–∞ —á—É–¥–æ–≤–∏–π –∞–≤–∞—Ç–∞—Ä\n\n'
             + '[üá∫üá¶ –ü—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –ó–°–£](https://savelife.in.ua/donate/)',

    'choice': 'ü¶æ –û–±–µ—Ä—ñ—Ç—å –¥–ª—è –∫–æ–≥–æ –±—É–¥–µ–º–æ —Ñ–æ—Ä–º—É–≤–∞—Ç–∏\n'
              + '—Ä–æ–∑–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –º–µ–Ω—é –∑–Ω–∏–∑—É:',

    'faculty': 'üìÅ –û–±–µ—Ä—ñ—Ç—å *—Ñ–∞–∫—É–ª—å—Ç–µ—Ç* –∑—ñ —Å–ø–∏—Å–∫—É –∞–±–æ\n'
               + '–≤–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –≥—Ä—É–ø–∏ –¥–ª—è –ø–æ—à—É–∫—É üîé',

    'group': 'üìÇ –û–±–µ—Ä—ñ—Ç—å *–≥—Ä—É–ø—É* –∑—ñ —Å–ø–∏—Å–∫—É:\n',

    'chair': 'üìÅ –û–±–µ—Ä–∏ *–∫–∞—Ñ–µ–¥—Ä—É* –∑—ñ —Å–ø–∏—Å–∫—É –∞–±–æ\n'
             + '–≤–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ –¥–ª—è –ø–æ—à—É–∫—É üîé',

    'surname': 'üìÇ –û–±–µ—Ä–∏ *–≤–∏–∫–ª–∞–¥–∞—á–∞* –∑—ñ —Å–ø–∏—Å–∫—É:\n',

    'good-search': 'üóÇ –û—Å—å —â–æ —è –≤—ñ–¥—à—É–∫–∞–≤:',

    'fail-search': '–ó–∞ —Ü–∏–º –∑–∞–ø–∏—Ç–æ–º –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ üßê\n\n'
                   + '‚ÅâÔ∏è –í–∫–∞–∂—ñ—Ç—å –±—ñ–ª—å—à —Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ –∞–±–æ\n'
                   + 'üìÅ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–µ–Ω—é –∑–Ω–∏–∑—É:',
}


async def get_message_by_key(key: str) -> str:
    return message.get(key, '‚è≥')


async def departments_init():
    # global faculty, chair
    if date.today().day == 1:
        await get_groups()
        await get_teachers()
    faculty[:] = await get_departments_by_mode('groups')
    chair[:] = await get_departments_by_mode('teachers')


async def search(query: str, d_type: str):
    """ Data search by json files

    Args:
        query (str): Text to search
        d_type (str): Search results of a specific type (chair or faculty)

    Returns:
        Array with search results
    """
    search_result = []
    with open(f'./../json/{d_type}.min.json') as f:
        text = json.loads(f.read())
        for d in text['psrozklad_export']['departments']:
            for i in d['objects']:
                if d_type == 'faculty':
                    if i['name'].lower() == query.lower():
                        return [i['name']]
                    if i['name'].lower().find(query.lower()) != -1:
                        search_result.append(i['name'])
                if d_type == 'chair':
                    fullname = '{} {} {}'.format(i['P'], i['I'], i['B'])
                    if fullname.lower().find(query.lower()) != -1:
                        search_result.append(fullname)
        if len(search_result):
            search_result.sort()
    return search_result


async def get_data_id_and_name(query: str, d_type: str):
    with open(f'./../json/{d_type}.min.json') as f:
        text = json.loads(f.read())
        for d in text['psrozklad_export']['departments']:
            for i in d['objects']:
                fullname = '{} {} {}'.format(i['P'], i['I'], i[
                    'B']) if d_type == 'chair' else ''
                if i[
                    'name'].lower() == query.lower() or fullname.lower() == query.lower():
                    return {'id': int(i['ID']), 'name': i['name']}
